

    for i in range(1,inbound+1):
        f.write("\n" + str(i) + ' 10')
    f.write("/;\n\n")

    f.write("parameter GT(j)/\n")

    for i in range(1,outbound+1):
        f.write("\n" + str(i) + ' 10')
    f.write("/;\n\n")


    f.write("parameter dd(j)/\n")
    for i in range(1,outbound+1):
        f.write("\n" + str(i) + ' 1')
    f.write("/;\n\n")

    f.write("parameter DDD(j)/\n")
    for i in range(1,outbound+1):
        f.write("\n" + str(i) + ' 3')
    f.write("/;\n\n")

    f.write("table r(i,k)\n\n ")
    t = PrettyTable()
    t.border = False
    t.header = False
    header = [""]
    header.extend(list(range(1,goods+1)))
    #print(header)
    t.add_row(header)
    for i in range(1,inbound + 1):
        y = [str(i)]
        y.extend(list(range(10,10+goods)))
        #print(y)
        t.add_row(y)
    f.write(t.get_string()+";\n\n")

    f.write("table s(j,k)\n\n ")
    t = PrettyTable()
    t.border = False
    t.header = False
    header = [""]
    header.extend(list(range(1,goods+1)))
    #print(header)
    t.add_row(header)
    for i in range(1,outbound + 1):
        y = [str(i)]
        y.extend(list(range(10,10+goods)))
        #print(y)
        t.add_row(y)
    f.write(t.get_string()+";\n\n")

    kutucuk = 2
    f.write("""Positive variable TT;
Positive variable TTT;
Positive variable T(j);
Positive variable EEE(j);
Positive variable E(i);
Positive variable ee(i);
Positive variable F(j);
Positive variable ff(j);
integer variable x(i,j,k);
Binary variable v(i,j);
Binary variable u(j)
Binary variable p(i,l,m);
Binary variable q(j,g,n);
Binary variable y(i,m);
Binary variable z(j,n);
variable h;

equations

constraint2

constraint3 (i)
constraint4 (i,l)
constraint5 (i)
constraint6 (m)
constraint7 (i,m)
constraint8 (i,m)
constraint9 (j)
constraint10 (j,g)
constraint11 (j)
constraint12 (n)
constraint13 (g,n)
constraint14 (g,n)
constraint15 (i,k)
constraint16 (j,k)
constraint17 (i,j)
constraint18 (i,j)
constraint21(j)
constraint22(j)
constraint23(i)
constraint24(i,j)
constraint25(j)

objective;



constraint2..                                                   TT=e=sum(j,T(j))+sum(j,EEE(j));

constraint3 (i)..                                               ee(i)+sum(k,r(i,k))=l=E(i);

constraint4 (i,l)$(ord(i)<>ord(l))..                            E(i)+9=l=ee(l)+100000*(1-sum(m,p(i,l,m)));

constraint5 (i)..                                              sum(m,y(i,m))=e=1;

constraint6 (m)..                                              sum(i,p(i,i,m))=e=1;

constraint7 (i,m)..                                            sum((l),p(l,i,m))=e=y(i,m);

constraint8 (i,m)..                                            sum((l)$(ord(i)<>ord(l)),p(i,l,m))=l=y(i,m);

constraint9 (j)..                                              ff(j)+sum(k,s(j,k))=l=F(j);

constraint10 (j,g)$(ord(j)<>ord(g))..                         F(g)+9=l=ff(j)+100000*(1-sum(n,q(g,j,n)));

constraint11 (j)..                                              sum(n,z(j,n))=e=1;

constraint12 (n)..                                              sum(j,q(j,j,n))=e=1;

constraint13 (j,n)..                                          sum((g),q(g,j,n))=e=z(j,n);

constraint14 (j,n)..                                          sum((g)$(ord(j)<>ord(g)),q(j,g,n))=l=z(j,n);

constraint15 (i,k)..                                           sum(j,x(i,j,k))=e=r(i,k);

constraint16 (j,k)..                                           sum(i,x(i,j,k))=e=s(j,k);

constraint17 (i,j)..                                           sum(k,x(i,j,k))=l=100000*v(i,j);

constraint18 (i,j)..                                           E(i)+25=l=ff(j)+100000*(1-v(i,j));

constraint21(j)..                                              EEE(j)=g= dd(j)-F(j);

constraint22(j)..                                              T(j)=g=F(j)-DDD(j);

constraint23(i)..                                              ee(i)=g=GG(i);

constraint25(j)$(ord(j)>%d)..                                   ff(j)=g=GT(j);

constraint24(i,j)$(ord(i)=ord(j)and ord(i)<%d)..                ee(i)+sum(k,r(i,k))+9+12=l=ff(j);


objective..                                                    TT=e=h;


model crossdocking/all/;
crossdocking.optcr=0;
solve crossdocking using mip minimizing h;
""" %(kutucuk+1,kutucuk))